webpackHotUpdate("app",{

/***/ "./src/components/shared/Schemes/ColorSchemeDesigner/index.tsx":
/*!*********************************************************************!*\
  !*** ./src/components/shared/Schemes/ColorSchemeDesigner/index.tsx ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ColorSchemeDesigner; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var components_shared_Schemes_ColorPickingArea__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! components/shared/Schemes/ColorPickingArea */ \"./src/components/shared/Schemes/ColorPickingArea/index.tsx\");\n/* harmony import */ var lib_models_Colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/models/Colors */ \"./src/lib/models/Colors.ts\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./style */ \"./src/components/shared/Schemes/ColorSchemeDesigner/style.scss\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nclass ColorSchemeDesigner extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n    constructor(props) {\n        super(props);\n        this.addNewColor = (color, select = false) => {\n            let newColor = new lib_models_Colors__WEBPACK_IMPORTED_MODULE_2__[\"Color\"](color);\n            newColor.original = new lib_models_Colors__WEBPACK_IMPORTED_MODULE_2__[\"Color\"](newColor);\n            this.props.colorScheme.addColor(newColor);\n            if (select) {\n                this.selectColor(newColor);\n            }\n            //this.onSchemeChanged();\n            this.forceUpdate();\n        };\n        this.changeColor = (color) => {\n            this.setState({\n                hasChanges: true\n            });\n        };\n        this.saveColor = (color) => {\n            this.setState({\n                hasChanges: false\n            });\n            // Set original to current change set\n            color.original = new lib_models_Colors__WEBPACK_IMPORTED_MODULE_2__[\"Color\"](color);\n            //this.onSchemeChanged();\n            this.forceUpdate();\n        };\n        this.deleteColor = (c) => {\n            this.props.colorScheme.deleteColor(c);\n            this.setState({\n                selectedColors: this.state.selectedColors.filter(_c => {\n                    return _c != c;\n                })\n            });\n        };\n        this.selectColor = (color) => {\n            const self = this;\n            let alreadySelected = false;\n            self.state.selectedColors.forEach((c) => {\n                if (c == color)\n                    alreadySelected = true;\n            });\n            if (!alreadySelected) {\n                // add to selected\n                self.setState({\n                    selectedColors: [...self.state.selectedColors, color]\n                });\n            }\n            else {\n                // remove from selected\n                self.setState({\n                    selectedColors: self.state.selectedColors.filter((c) => {\n                        return (c != color);\n                    })\n                });\n            }\n        };\n        const self = this;\n        this.state = {\n            colorScheme: this.props.colorScheme,\n            selectedColors: [],\n            hasChanges: false\n        };\n    }\n    componentDidMount() {\n        //this.loadScheme(this.props.colorScheme);\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.colorScheme != this.props.colorScheme) {\n            this.clearState();\n        }\n    }\n    clearState() {\n        this.setState({\n            selectedColors: []\n        });\n    }\n    render() {\n        let self = this;\n        return this.props.colorScheme ?\n            (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: 'container view color-scheme-designer' },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"controls\" },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"button button-blue-md button-inline\", onClick: () => self.addNewColor() }, \"Add Color\"),\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"button button-blue-md button-inline\", onClick: () => self.props.onDeleteScheme(self.props.colorScheme) }, \"Delete Scheme\")),\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"color-set\" }, this.props.colorScheme.colors.map((c, i) => {\n                    let colorHex = c.getColor(); // c.original.getColor();\n                    let style = { 'backgroundColor': colorHex };\n                    let isSelected = this.state.selectedColors.includes(c);\n                    return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: 'color' + (isSelected ? ' selected' : ''), style: style, onClick: () => self.selectColor(c), key: i },\n                        react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"info\" }, colorHex)));\n                })),\n                this.state.selectedColors.map((c, i) => {\n                    return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](components_shared_Schemes_ColorPickingArea__WEBPACK_IMPORTED_MODULE_1__[\"default\"], { key: i, color: c, onColorChanged: (c) => self.changeColor(c), onColorSaved: (c) => self.saveColor(c), onAddNewColor: (c) => self.addNewColor(c), onDeleteColor: (c) => self.deleteColor(c) }));\n                }),\n                false && react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"button button-blue-md button-inline\", onClick: () => self.addNewColor(null, true) }, \"+ Add Color\")))\n            : null;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/components/shared/Schemes/ColorSchemeDesigner/index.tsx?");

/***/ }),

/***/ "./src/components/views/ProjectView/index.tsx":
/*!****************************************************!*\
  !*** ./src/components/views/ProjectView/index.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProjectView; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var client_components_shared_Schemes_ColorSchemeDesigner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! client/components/shared/Schemes/ColorSchemeDesigner */ \"./src/components/shared/Schemes/ColorSchemeDesigner/index.tsx\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./style */ \"./src/components/views/ProjectView/style.scss\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nclass ProjectView extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n    constructor(props) {\n        super(props);\n    }\n    onAddScheme() {\n        this.props.project.createNewColorScheme();\n        this.forceUpdate();\n    }\n    onDeleteScheme(cs) {\n        if (confirm(\"Are you sure you want to delete this color scheme?\")) {\n            this.props.project.deleteColorScheme(cs);\n            this.forceUpdate();\n        }\n    }\n    render() {\n        const self = this;\n        return this.props.project ?\n            (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"project\" },\n                react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"controls\" },\n                    react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"div\", { className: \"button button-blue-md button-inline\", onClick: () => self.onAddScheme() }, \"Add New Scheme\")),\n                this.props.project.colorSchemes.map((cs, i) => {\n                    return (react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](client_components_shared_Schemes_ColorSchemeDesigner__WEBPACK_IMPORTED_MODULE_1__[\"default\"], { key: i, colorScheme: cs, onDeleteScheme: cs => self.onDeleteScheme(cs) }));\n                })))\n            : null;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/components/views/ProjectView/index.tsx?");

/***/ })

})